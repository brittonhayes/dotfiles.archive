# https://taskfile.dev
version: "3"

dotenv: ['.env']

includes:
  test: ./Taskfile.test.yml
  backup: ./Taskfile.backup.yml

silent: true

tasks:
  default:
    cmds:
      - task -l
    
  test:
    desc: "Test installation in docker"
    cmds:
      - docker build --rm . -t dotfiles:latest
      - docker run -u root -it dotfiles:latest

  all:
    desc: "Run all setup commands"
    cmds:
      - /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
      - task: pkg:brew
      - task: setup:zsh
      - task: setup:git
      - task: setup:starship
      - task: setup:fonts
      - task: setup:vim
      - task: setup:alacritty
      - task: setup:tldr
      - echo "Terminal setup complete!"
      - sleep 3
      - alacritty

  pkg:golang:
    desc: "Install all Go packages"
    deps: [test:go]
    cmds:
      - go get github.com/cosmtrek/air
      - go get github.com/spf13/cobra/cobra
      - go get github.com/dave/courtney
      - go get github.com/go-delve/delve/cmd/dlv
      - go get github.com/mailru/easyjson
      - go get goa.design/goa/v3/...@v3
      - go get golang.org/x/tools/cmd/goimports
      - go get github.com/segmentio/golines
      - go get github.com/princjef/gomarkdoc/cmd/gomarkdoc
      - go get github.com/magefile/mage
      - go get github.com/client9/misspell/cmd/misspell
      - go get github.com/alphasoc/flightsim/...
      - github.com/go-jira/jira/cmd/jira
      - echo "All Go packages installed!"

  pkg:brew:
    desc: "Install all Brew packages"
    deps: [test:brew]
    cmds:
      - xargs brew install < brew/brewlist.txt
      - echo "All Brew packages installed!"

  setup:alacritty:
    desc: "Setup Alacritty configuration"
    deps: [test:stow, test:brew, test:alacritty]
    cmds:
      - task: backup:alacritty
      - stow --target=$HOME/.config/alacritty/ alacritty
      - echo "Alacritty setup!"

  setup:tldr:
    desc: "Setup tldr"
    deps: [test:brew]
    cmds:
      - brew install tldr
      - tldr -u
      - echo "TLDR setup!"
  
  setup:pet:
    desc: "Setup Pet CLI snippets manager"
    deps: [test:brew]
    cmds:
      - brew install knqyf263/pet/pet
      - task: backup:pet
      - stow --target=$HOME/.config/pet/ pet
      - echo "Pet setup!"

  setup:starship:
    deps: [test:stow, test:brew]
    desc: "Setup Starship prompt"
    cmds:
      - brew install starship
      - task: backup:starship
      - stow --target=$HOME/.config/ starship
      - echo "Starship setup!"

  setup:git:
    desc: "Setup global gitignore"
    deps: [test:git]
    cmds:
      - git config --global core.excludesfile ./git/.gitignore-system
      - echo "Global gitignore setup!"

  setup:tmux:
    desc: "Setup terminal multiplexer"
    deps: [test:stow]
    cmds:
      - stow --target=$HOME/.config/ tmux
      - echo "TMUX setup!"

  setup:vim:
    desc: "Setup vimrc"
    deps: [test:stow, test:vimrc]
    cmds:
      - task: backup:vimrc
      - stow --target=$HOME/.config/nvim/ nvim
      - task: setup:vim:plug
      - stow vim
      - echo "VIM setup done!"

  setup:vim:plug:
    cmds:
      - sh -c 'curl -fLo "$HOME/dotfiles/autoload/plug.vim" --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim'
      - sh -c 'curl -fLo "$HOME/dotfiles/autoload/plug.vim" --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim'

  setup:zsh:
    desc: "Setup zsh"
    deps: [test:zsh, test:stow]
    cmds:
      - sh -c "$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
      - task: backup:zsh
      - stow --target=$HOME/.config/ zsh
      - git clone https://github.com/zsh-users/zsh-completions ~/.oh-my-zsh/custom/plugins/zsh-completions
      - git clone https://github.com/zsh-users/zsh-autosuggestions ~/.oh-my-zsh/custom/plugins/zsh-autosuggestions
      - git clone https://github.com/zsh-users/zsh-syntax-highlighting.git ~/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting
      - source ~/.config/.zshrc
      - echo "ZSH setup done!"
    preconditions:
      - sh: test ! -d ~/.oh-my-zsh
        msg: "Please remove ~/.oh-my-zsh"

  setup:fish:
    desc: "Setup fish"
    deps: [test:fish, test:stow]
    cmds:
      - fish ./fish/setup.fish 
      - stow --target=$HOME/.config/fish/ fish
      - echo "fish setup done!"

  setup:fonts:
    desc: "Setup Nerdfonts"
    deps: [test:brew]
    cmds:
      - brew tap homebrew/cask-fonts
      - brew install font-blex-mono-nerd-font
      - brew install font-hack-nerd-font
      - brew install font-jetbrains-mono-nerd-font
      - echo "Fonts setup done!"
